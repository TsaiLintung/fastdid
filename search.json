[{"path":"https://tsailintung.github.io/fastdid/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 fastdid authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"performance","dir":"Articles","previous_headings":"","what":"Performance","title":"misc","text":"fastdid magnitudes faster , 15x faster fastest alternative DiDforBigData (dfbd short) large dataset. fastdid also uses less memory. comparison run time fastdid, , dfbd using panel 10 periods varying samples sizes.  Unfortunately, Author’s computer fails run 1 million units. rough idea, DiDforBigData 100x faster Bradley Setzler’s benchmark. staggered implementations even slower . memory:  benchmark, baseline group-time ATT estimated covariates control, bootstrap, explicit parallelization. Computing time measured microbenchmark peak RAM peakRAM.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"validitiy","dir":"Articles","previous_headings":"","what":"Validitiy","title":"misc","text":"release, conduct tests ensure validity estimates fastdid.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"basics-comparison-with-did","dir":"Articles","previous_headings":"Validitiy","what":"Basics: comparison with did","title":"misc","text":"features included CS, fastdid maintains maximum 1% difference results package. margin error mostly bootstrapped results due inherent randomess. point estimates, difference smaller 1e-12, likely result floating-point error. relevant test files compare_est.R.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"extensions-coverage-test","dir":"Articles","previous_headings":"Validitiy","what":"Extensions: coverage test","title":"misc","text":"features included CS, fastdid maintains 95% confidence intervals coverage rate 94% 96%. coverage rate calculated running 200 iterations. iteration, test whether confidence interval estimated covers group-truth values. average rate across iterations. Due randomness coverage, realized coverage fall outside thresholds 1% time. relevant test file coverage.R.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"experimental-features-not-tested","dir":"Articles","previous_headings":"Validitiy","what":"Experimental Features: not tested","title":"misc","text":"attempt balance validity flexibility fastdid, “experimental features” introduced version 0.9.4. features less tested documented, generally advised use unless user know package . experimental features can accessed via exper argument. example, use filtervar feature, call fastdid(..., exper = list(filtervar = \"FF\")). current list experimental features max_control_cohort_diff: limit max cohort difference treated control group filtervar, filtervar_post: limit units used treated control group potentially-time-varying variable base (post) period only_balance_2by2: require observations non-NA values within 2 2 , instead throughout time periods. Can alternative way dealing unbalanced panel filling missing periods NAs. recommended CS allow_unbalance_panel, uses repeated cross-section 2 2 estimator. custom_scheme: aggregate user-defined parameters","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"comparison-with-did","dir":"Articles","previous_headings":"","what":"Comparison with did","title":"misc","text":"name suggests, fastdid’s goal fast . Besides performance, comparisons two packages.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"estimator","dir":"Articles","previous_headings":"Comparison with did","what":"Estimator","title":"misc","text":"fastdid’s estimators identical ’s. performance gains mostly come efficient data manipulation, key estimation implementations analogous. example, 2x2 (estimate_did.R DRDID::std_ipw_did_panel), influence function weights (aggregate_gt.R/get_weight_influence, compute.aggte.R/wif), multiplier bootstrap (get_se.R mboot.R).","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"interface","dir":"Articles","previous_headings":"Comparison with did","what":"Interface","title":"misc","text":"fastdid feel similar att_gt. differences: Control group option: Aggregated parameters: fastdid aggregates function.","code":""},{"path":"https://tsailintung.github.io/fastdid/articles/misc.html","id":"other","dir":"Articles","previous_headings":"Comparison with did","what":"Other","title":"misc","text":"fastdid offers inverse probability weights estimators controlling covariates allowing unbalanced panels. fastdid use universal base periods default.","code":""},{"path":"https://tsailintung.github.io/fastdid/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lin-Tung Tsai. Author, maintainer, copyright holder. Maxwell Kellogg. Contributor. Kuan-Ju Tseng. Contributor.","code":""},{"path":"https://tsailintung.github.io/fastdid/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tsai L (2024). fastdid: Fast Staggered Difference--Difference Estimators. R package version 0.9.9, https://tsailintung.github.io/fastdid/, https://github.com/TsaiLintung/fastdid.","code":"@Manual{,   title = {fastdid: Fast Staggered Difference-in-Difference Estimators},   author = {Lin-Tung Tsai},   year = {2024},   note = {R package version 0.9.9, https://tsailintung.github.io/fastdid/},   url = {https://github.com/TsaiLintung/fastdid}, }"},{"path":"https://tsailintung.github.io/fastdid/index.html","id":"fastdid","dir":"","previous_headings":"","what":"Fast Staggered Difference-in-Difference Estimators","title":"Fast Staggered Difference-in-Difference Estimators","text":"fastdid implements Difference--Differences () estimators Callaway Sant’Anna’s (2021), fast, reducing computation time millions units hours seconds, flexible, extensions time-varying covariates multiple events (coming soon!).","code":""},{"path":"https://tsailintung.github.io/fastdid/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Fast Staggered Difference-in-Difference Estimators","text":"fastdid can installed GitHub. use fastdid, need provide dataset data, column name time timevar, cohort cohortvar, unit unitvar, outcome(s) outcomevar. simple call: function returns data.table includes estimates. Column att point estimate, se standard error estimate, att_ciub att_cilb confidence interval. columns indexes estimated parameter. create event study plots, use plot_did_dynamics(did_estimate).","code":"# install.packages(\"devtools\") devtools::install_github(\"TsaiLintung/fastdid\") library(fastdid) #loading the package did_sim <- sim_did(1e+03, 10) #simulate some data did_estimate <- fastdid(data = did_sim$dt, timevar = \"time\",                   cohortvar = \"G\", unitvar = \"unit\", outcomevar = \"y\")"},{"path":"https://tsailintung.github.io/fastdid/index.html","id":"more","dir":"","previous_headings":"","what":"More","title":"Fast Staggered Difference-in-Difference Estimators","text":": staggered Difference Difference Callaway Sant’Anna fastdid: full list arguments features. double: introduction multiple events. misc: comparison , benchmark, tests, experimental features.","code":""},{"path":"https://tsailintung.github.io/fastdid/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Fast Staggered Difference-in-Difference Estimators","text":"fastdid created maintained Lin-Tung Tsai. Many thanks Maxwell Kellogg Kuan-Ju Tseng contribution.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Staggered DID Estimation — fastdid","title":"Fast Staggered DID Estimation — fastdid","text":"Performs Difference--Differences () estimation.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Staggered DID Estimation — fastdid","text":"","code":"fastdid(   data,   timevar,   cohortvar,   unitvar,   outcomevar,   control_option = \"both\",   result_type = \"group_time\",   balanced_event_time = NA,   control_type = \"ipw\",   allow_unbalance_panel = FALSE,   boot = FALSE,   biters = 1000,   cband = FALSE,   alpha = 0.05,   weightvar = NA,   clustervar = NA,   covariatesvar = NA,   varycovariatesvar = NA,   copy = TRUE,   validate = TRUE,   anticipation = 0,   base_period = \"universal\",   exper = NULL,   full = FALSE,   parallel = FALSE,   cohortvar2 = NA,   event_specific = TRUE,   double_control_option = \"both\" )"},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Staggered DID Estimation — fastdid","text":"data data.table, dataset. timevar character, name time variable. cohortvar character, name cohort (group) variable. unitvar character, name unit (id) variable. outcomevar character vector, name(s) outcome variable(s). control_option character, control units used estimates, options \"\", \"never\", \"notyet\". result_type character, type result return, options \"group_time\", \"time\", \"group\", \"simple\", \"dynamic\" (time since event), \"group_group_time\", \"dynamic_stagger\". balanced_event_time number, max event time balance cohort composition. control_type character, estimator controlling covariates, options \"ipw\" (inverse probability weighting), \"reg\" (outcome regression), \"dr\" (doubly-robust). allow_unbalance_panel logical, allow unbalance panel input coerce dataset one. boot logical, whether use bootstrap standard error. biters number, bootstrap iterations. Default 1000. cband logical, whether use uniform confidence band point-wise. alpha number, significance level. Default 0.05. weightvar character, name weight variable. clustervar character, name cluster variable. covariatesvar character vector, names time-invariant covariate variables. varycovariatesvar character vector, names time-varying covariate variables. copy logical, whether copy dataset. validate logical, whether validate dataset. anticipation number, periods anticipation. base_period character, type base period pre-preiods, options \"universal\", \"varying\". exper list, arguments experimental features. full logical, whether return full result (influence function, call, weighting scheme, etc,.). parallel logical, whether use parallization unix system. cohortvar2 character, name second cohort (group) variable. event_specific logical, whether recover target treatment effect use combined effect. double_control_option character, control units used double , options \"\", \"never\", \"notyet\".","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Staggered DID Estimation — fastdid","text":"data.table containing estimated treatment effects standard errors list results `full == TRUE`.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Staggered DID Estimation — fastdid","text":"`balanced_event_time` meaningful `result_type == \"dynamic`. `result_type` `group-group-time` `dynamic staggered` meaningful using double . `biter` `clustervar` used `boot == TRUE`.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/fastdid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Staggered DID Estimation — fastdid","text":"","code":"# simulated data simdt <- sim_did(1e+02, 10, cov = \"cont\", second_cov = TRUE, second_outcome = TRUE, seed = 1) dt <- simdt$dt  #basic call result <- fastdid(data = dt, timevar = \"time\", cohortvar = \"G\",                    unitvar = \"unit\", outcomevar = \"y\",                     result_type = \"group_time\")"},{"path":"https://tsailintung.github.io/fastdid/reference/plot_did_dynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot event study — plot_did_dynamics","title":"Plot event study — plot_did_dynamics","text":"Plot event study results.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/plot_did_dynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot event study — plot_did_dynamics","text":"","code":"plot_did_dynamics(x, margin = \"event_time\")"},{"path":"https://tsailintung.github.io/fastdid/reference/plot_did_dynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot event study — plot_did_dynamics","text":"x data table generated [fastdid] one-dimensional index. margin character, x-axis plot","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/plot_did_dynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot event study — plot_did_dynamics","text":"ggplot2 object","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/plot_did_dynamics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot event study — plot_did_dynamics","text":"","code":"# simulated data simdt <- sim_did(1e+02, 10, seed = 1) dt <- simdt$dt  #estimation result <- fastdid(data = dt, timevar = \"time\", cohortvar = \"G\",                    unitvar = \"unit\", outcomevar = \"y\",                     result_type = \"dynamic\")  #plot plot_did_dynamics(result)"},{"path":"https://tsailintung.github.io/fastdid/reference/sim_did.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","title":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","text":"Simulates dataset Difference--Differences analysis various customizable options.","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/sim_did.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","text":"","code":"sim_did(   sample_size,   time_period,   untreated_prop = 0.3,   epsilon_size = 0.001,   cov = \"no\",   hetero = \"all\",   second_outcome = FALSE,   second_cov = FALSE,   vary_cov = FALSE,   na = \"none\",   balanced = TRUE,   seed = NA,   stratify = FALSE,   treatment_assign = \"latent\",   second_cohort = FALSE,   confound_ratio = 1,   second_het = \"all\" )"},{"path":"https://tsailintung.github.io/fastdid/reference/sim_did.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","text":"sample_size number units dataset. time_period number time periods dataset. untreated_prop proportion untreated units. epsilon_size standard deviation error term potential outcomes. cov type covariate include (\"\", \"int\", \"cont\"). hetero type heterogeneity treatment effects (\"\" \"dynamic\"). second_outcome Whether include second outcome variable. second_cov Whether include second covariate. vary_cov include time-varying covariates na Whether generate missing data (\"none\", \"y\", \"x\", \"\"). balanced Whether balance dataset random sampling. seed Seed random number generation. stratify Whether stratify dataset based binary covariate. treatment_assign method treatment assignment (\"latent\" \"uniform\"). second_cohort include confounding events confound_ratio extent event confoundedness second_het heterogeneity second event","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/sim_did.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","text":"list containing simulated dataset (dt) treatment effect values (att).","code":""},{"path":"https://tsailintung.github.io/fastdid/reference/sim_did.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a Difference-in-Differences (DiD) dataset — sim_did","text":"","code":"# Simulate a DiD dataset with default settings data <- sim_did(sample_size = 100, time_period = 5)"},{"path":"https://tsailintung.github.io/fastdid/news/index.html","id":"version-099","dir":"Changelog","previous_headings":"","what":"Version 0.9.9","title":"Version 0.9.9","text":"add double (see vignette introduction) add parallel, parallization unix systems, useful number g-t large. add full, return full result influence function, aggregate scheme, add min/max_dynamic, custom_scheme experimental features","code":""},{"path":"https://tsailintung.github.io/fastdid/news/index.html","id":"version-094","dir":"Changelog","previous_headings":"","what":"Version 0.9.4","title":"Version 0.9.4","text":"BREAKING change introduced update. add uniform confidence interval option cband significance level alpha, confidence interval now provided result column att_ciub att_cilb BREAKING: filtervar, max_control_cohort_diff, min_control_cohort_diff moved experimental features. See section explanation. add max_dynamic min_dynamic experimental features. informative error message estimation fails specific gt, internal interface overhaul","code":""},{"path":"https://tsailintung.github.io/fastdid/news/index.html","id":"version-093","dir":"Changelog","previous_headings":"","what":"Version 0.9.3","title":"Version 0.9.3","text":"add anticipation varying base period option add min max control cohort difference add time-varying control (reference) add filtervar 0.9.3.1 (2024/5/24): fix bug univar == clustervar (TODO: address problems name-changing collision). 0.9.3.2 (2024/7/17): fix group_time result using control_type = \"notyet\" make base period plots adapt anticipation. 0.9.3.3 (2024/7/22): fix anticipation bound problem, permanent solution group_time target problem","code":""},{"path":"https://tsailintung.github.io/fastdid/news/index.html","id":"version-092","dir":"Changelog","previous_headings":"","what":"Version 0.9.2","title":"Version 0.9.2","text":"add support doubly robust outcome regression estimators add support unbalanced panels (simple ipw ) add support balanced composition option dynamics aggregation fixed argument checking working properly set default copying entire dataset avoid unexpected modification original data (thanks @grantmcdermott suggestion.)","code":""},{"path":"https://tsailintung.github.io/fastdid/news/index.html","id":"version-091","dir":"Changelog","previous_headings":"","what":"Version 0.9.1","title":"Version 0.9.1","text":"now supprts estimation multiple outcomes one go! data validation: longer check missing values columns used.","code":""}]
